# The type will be used by the application to generate the resources for the selected provider: konflux, tekton
type: konflux
domain: build
namespace: cmoullia

repository:
  url: https://github.com/paketo-community/builder-ubi-base

# To generate the Application and/or Component CR
application:
  name: my-quarkus
  enable: false
component:
  name: my-quarkus-app
  enable: false

job:
  resourceType: PipelineRun
  name: pack-build-builder-image-remote
  description: PipelineRun using the pack cli to build the builder image remotely

  params:
    # Buildpack params
    - source-dir: "source"
    - imageUrl: "buildpacksio/pack"
    - imageTag: "latest"
    - packCmdBuilderFlags:
        - builder
        - create
        - builder
        - --config
        - $(workspaces.source.path)/$(params.SOURCE_SUBPATH)/builder.toml

  actions:
    - name: pack
      params:
        - PACK_SOURCE_DIR: "$(params.source-dir)"
        - PACK_CLI_VERSION: "v0.35.1"
        - DOCKER_HOST: $(tasks.virtualmachine.results.ip)
        #- PACK_CMD_FLAGS:
        #    - "$(params.packCmdBuilderFlags)"
      workspaces:
        - name: source
          workspace: workspace
      results:
        - IMAGE_URL: "Image repository where the built image was pushed"
        - IMAGE_DIGEST: "Digest of the image just built"
        - BASE_IMAGES_DIGESTS: "Digests of the base images used for build"

      args:
        - "$(params.packCmdBuilderFlags)"
      script: |
        #!/usr/bin/env bash
        set -e
        
        echo "Installing pack ..."
        curl -sSL "https://github.com/buildpacks/pack/releases/download/$(params.PACK_CLI_VERSION)/pack-$(params.PACK_CLI_VERSION)-linux.tgz" | tar -C /usr/local/bin/ --no-same-owner -xzv pack
        
        echo "Checking pack ..."
        pack --version
        pack config experimental true

        export DOCKER_HOST=tcp://$(params.DOCKER_HOST):2376
        echo "DOCKER_HOST=tcp://$(params.DOCKER_HOST):2376"

        # We cannot get the array from the params PACK_CMD_FLAGS within the bash script as substitution don't work in this case !!
        echo "Getting the arguments ..."
        for cmd_arg in "$@"; do
          CLI_ARGS+=("$cmd_arg")
        done
        
        echo "Here are the arguments to be passed to the pack CLI"
        for i in "$CLI_ARGS[@]"; do
          echo "arg: $i"
        done
        
        echo "Building the builder image ..."
        echo "pack ${CLI_ARGS[@]}"
        pack "${CLI_ARGS[@]}"
        
        echo -n "URL of the image build is : quarkus-hello:1.0" | tee "$(results.IMAGE_URL.path)"
        echo -n "sha256ddddddddddddddddddddd" | tee "$(results.IMAGE_DIGEST.path)"
        echo -n "sha256eeeeeeeeeeeeeeeeeeeeee" | tee "$(results.BASE_IMAGES_DIGESTS.path)"
        

        
        
        


