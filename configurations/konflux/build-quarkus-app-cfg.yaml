# The type will be used by the application to generate the resources for the selected provider: konflux, tekton
type: konflux
domain: build
namespace: user-ns1

repository:
  url: https://github.com/ch007m/new-quarkus-app-1
  dockerfilePath: src/main/docker/Dockerfile.jvm

# To generate or not the Application and/or Component CR
application:
  name: my-quarkus
  enable: true
component:
  name: quarkus-1
  enable: true

job:
  # One of the supported resources: PipelineRun, Pipeline
  resourceType: PipelineRun
  name: quarkus-1-on-push
  description: PipelineRun performing a build of a Quarkus application using pack CLI

  workspaces:
  - name: workspace
    volumeClaimTemplate:
      storage: 1Gi
      accessMode: ReadWriteOnce
  - name: git-auth
    secret:
      name: "{{ git_auth_secret }}"

  # Remark : As the Pipeline(run) resource of konflux already defines mandatory steps to perform actions as listed here - it is then not needed
  # to detail them here except the actions that you want to include part of the build process

  # The actions to be executed should match/map the name ofg the Task declared in an OCI Bundle or Git repository url
  # Examples:
  # - pack: to build an image using the Pack CLI
  # - build: to build an application using a builder image
  # - pack-builder: to create a builder image using pack CLI
  # - stack: to create a base stack image build or run
  # - meta/composite: to package the buildpacks of a "meta/composite" buildpack project
  # - buildpack: to package a "buildpack" project
  # - extension: to package an "extension" project
  # TODO: List of the examples should be reviewed !
  actions:
    - name: pack # TODO: To be reviewed as the name of the task is different about the "build-container"
      ref: bundle://quay.io/ch007m/tekton-bundle:latest@sha256:bc130944a4ee377846abd2ffe9add0c8ad1dff571089d4e0b590e0c446660ac4
      workspaces:
        - name: source-dir
          workspace: workspace
        - name: pack-workspace
          workspace: workspace
      params:
        - PACK_SOURCE_DIR: "$(params.source-dir)"
        - PACK_CLI_IMAGE: "$(params.imageUrl)"
        - PACK_CLI_IMAGE_VERSION: "$(params.imageTag)"
        - PACK_CMD_FLAGS:
          - "$(params.packCmdBuilderFlags)"

