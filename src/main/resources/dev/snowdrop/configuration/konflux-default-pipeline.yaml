type: konflux
domain: configuration

repository:
  url: https://github.com/konflux-ci/build-definitions.git # dummy as we will be override using user's configuration

# List of OCI bundles used part of a task within the Pipeline
bundles:
  - bundle://quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:092c113b614f6551113f17605ae9cb7e822aa704d07f0e37ed209da23ce392cc
  - bundle://quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:0bb1be8363557e8e07ec34a3c5daaaaa23c9d533f0bb12f00dc604d00de50814
  - bundle://quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies:0.1@sha256:058a59f72997c9cf1be20978eb6a145d8d4d436c6098f2460bd96766bb363b20
  - bundle://quay.io/konflux-ci/tekton-catalog/task-source-build:0.1@sha256:21cb5ebaff7a9216903cf78933dc4ec4dd6283a52636b16590a5f52ceb278269
  - bundle://quay.io/konflux-ci/tekton-catalog/task-build-image-index:0.1@sha256:409ff39379c50d3c257229b4c6d6600e35eb53637504c47fb36ade262c70716e
  - bundle://quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check:0.4@sha256:d98fa9daf5ee12dfbf00880b83d092d01ce9994d79836548d2f82748bb0c64a2
  - bundle://quay.io/konflux-ci/tekton-catalog/task-clair-scan:0.1@sha256:baea4be429cf8d91f7c758378cea42819fe324f25a7f957bf9805409cab6d123
  - bundle://quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check:0.2@sha256:82c42d27c9c59db6cf6c235e89f7b37f5cdfc75d0d361ca0ee91ae703ba72301
  - bundle://quay.io/konflux-ci/tekton-catalog/task-clamav-scan:0.1@sha256:7bb17b937c9342f305468e8a6d0a22493e3ecde58977bd2ffc8b50e2fa234d58
  - bundle://quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1@sha256:9bfc6b99ef038800fe131d7b45ff3cd4da3a415dd536f7c657b3527b01c4a13b
  - bundle://quay.io/konflux-ci/tekton-catalog/task-sbom-json-check:0.1@sha256:2c5de51ec858fc8d47e41c65b20c83fdac249425d67ed6d1058f9f3e0b574500
  - bundle://quay.io/konflux-ci/tekton-catalog/task-summary:0.2@sha256:d97c04ab42f277b1103eb6f3a053b247849f4f5b3237ea302a8ecada3b24e15b
  - bundle://quay.io/konflux-ci/tekton-catalog/task-ecosystem-cert-preflight-checks:0.1@sha256:5131cce0f93d0b728c7bcc0d6cee4c61d4c9f67c6d619c627e41e3c9775b497d
  - bundle://quay.io/konflux-ci/tekton-catalog/task-buildah:0.2@sha256:5d0bd592a8924451b6472696e398fa719773f819df6e8e040cd2fb2b550e0e74

job:
  resourceType: PipelineRun
  name: default-konflux
  description: Default konflux pipeline

  annotations:
    - "build.appstudio.redhat.com/commit_sha": "{{revision}}"
    - "build.appstudio.redhat.com/target_branch": "{{target_branch}}"
    - "pipelinesascode.tekton.dev/max-keep-runs": "3"
    - "pipelinesascode.tekton.dev/on-cel-expression": "event == 'push' && target_branch == 'main'"

  labels:
     - "pipelines.openshift.io/used-by": "build-cloud"
     - "pipelines.openshift.io/runtime": "java"
     - "pipelines.appstudio.openshift.io/type": "build"

  workspaces:
    - name: workspace
      volumeClaimTemplate:
        storage: 1Gi
        accessMode: ReadWriteOnce
    - name: git-auth
      secret:
        name: "{{ git_auth_secret }}"

  params:
    - git-url: "{{source_url}}"
    - revision: "{{revision}}"
    - output-image: "quay.io/ch007m/builder-ubi-base:{{revision}}"
    - image-expires-after: "5d"
    - build-image-index: ""
    # We need the following parameters when defined part of the PipelineSpec with default value and used by a task
    - build-source-image: false
    - prefetch-input: ""

  results:
    - IMAGE_URL: "$(tasks.build-container.results.IMAGE_URL)"
    - IMAGE_DIGEST: "$(tasks.build-container.results.IMAGE_DIGEST)"
    - BASE_IMAGES_DIGESTS: "$(tasks.build-container.results.BASE_IMAGES_DIGESTS)"

    - CHAINS-GIT_URL: "$(tasks.git-clone.results.url)"
    - CHAINS-GIT_COMMIT: "$(tasks.git-clone.results.commit)"

    #- CHAINS-GIT_URL: "$(tasks.clone-repository.results.url)"
    #- CHAINS-GIT_COMMIT: "$(tasks.clone-repository.results.commit)"
  
  actions:
    # Finally
    - name: show-sbom
      finally: true
      params:
        - IMAGE_URL: "$(tasks.build-container.results.IMAGE_URL)"
      ref: bundle://quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1

    - name: show-summary
      finally: true
      params:
        - pipelinerun-name: "$(context.pipelineRun.name)"
        - git-url: "$(tasks.git-clone.results.url)?rev=$(tasks.git-clone.results.commit)"
        #- git-url: "$(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)"
        - image-url: "$(params.output-image)"
        - build-task-status: "$(tasks.build-container.status)"
      ref: bundle://quay.io/konflux-ci/tekton-catalog/task-summary:0.2
      workspaces:
        - name: workspace
          workspace: workspace
      
    # Tasks
    - name: init
      params:
        - image-url: "$(params.output-image)"
        - rebuild: "$(params.rebuild)"
        - skip-checks: "$(params.skip-checks)"
      ref: bundle://quay.io/konflux-ci/tekton-catalog/task-init:0.2

    - name: git-clone # Konflux name is : clone-repository !!
      runAfter: init
      when:
        - "$(tasks.init.results.build): true"
      params:
        - url: "$(params.git-url)"
      ref: bundle://quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1
      workspaces:
        - name: output
          workspace: workspace
        - name: basic-auth
          workspace: git-auth

    - name: build-container # dummy task to be replaced with the user's tasks
      runAfter: prefetch-dependencies
      ref: bundle://quay.io/konflux-ci/tekton-catalog/task-buildah:0.2

    - name: prefetch-dependencies
      runAfter: git-clone #clone-repository
      when: # TODO: Do we support notin ?
        - "$(params.prefetch-input): notin empty list"
      params:
        - input: "$(params.prefetch-input)"
      ref: bundle://quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies:0.1
      workspaces:
        - name: source
          workspace: workspace
        - name: git-basic-auth
          workspace: git-auth

    - name: build-image-index
      runAfter: build-container
      when:
        - "$(tasks.init.results.build): true"
      params:
        - IMAGE: "$(params.output-image)"
        - COMMIT_SHA: "$(tasks.git-clone.results.commit)" # "$(tasks.clone-repository.results.commit)"
        - IMAGE_EXPIRES_AFTER: "$(params.image-expires-after)"
        - ALWAYS_BUILD_INDEX: "$(params.build-image-index)"
        - IMAGES:
          - "$(tasks.build-container.results.IMAGE_URL)@$(tasks.build-container.results.IMAGE_DIGEST)"
      ref: bundle://quay.io/konflux-ci/tekton-catalog/task-build-image-index:0.1
      workspaces:
        - name: workspace
          workspace: workspace

    - name: source-build # Konflux name is : build-source-image !!
      runAfter: build-container
      when:
        - "$(tasks.init.results.build): true"
        - "$(params.build-source-image): true"
      params:
        - BINARY_IMAGE: "$(params.output-image)"
        - BASE_IMAGES: "$(tasks.build-container.results.BASE_IMAGES_DIGESTS)"
      ref: bundle://quay.io/konflux-ci/tekton-catalog/task-source-build:0.1
      workspaces:
        - name: workspace
          workspace: workspace

    - name: clair-scan
      runAfter: build-container
      when:
        - "$(params.skip-checks): false"
      params:
        - image-digest: "$(tasks.build-container.results.IMAGE_DIGEST)"
        - image-url: "$(tasks.build-container.results.IMAGE_URL)"
      ref: bundle://quay.io/konflux-ci/tekton-catalog/task-clair-scan:0.1

    - name: ecosystem-cert-preflight-checks
      runAfter: build-container
      when:
        - "$(params.skip-checks): false"
      params:
        - image-url: "$(tasks.build-container.results.IMAGE_URL)"
      ref: bundle://quay.io/konflux-ci/tekton-catalog/task-ecosystem-cert-preflight-checks:0.1

    - name: sast-snyk-check
      runAfter: build-container
      when:
        - "$(params.skip-checks): true"
      params:
        - image-digest: "$(tasks.build-container.results.IMAGE_DIGEST)"
        - image-url: "$(tasks.build-container.results.IMAGE_URL)"
      ref: bundle://quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check:0.2
      workspaces:
        - name: workspace
          workspace: workspace

    - name: clamav-scan
      runAfter: build-container
      when:
        - "$(params.skip-checks): false"
      params:
        - image-digest: "$(tasks.build-container.results.IMAGE_DIGEST)"
        - image-url: "$(tasks.build-container.results.IMAGE_URL)"
      ref: bundle://quay.io/konflux-ci/tekton-catalog/task-clamav-scan:0.1

    - name: sbom-json-check
      runAfter: build-container
      when:
        - "$(params.skip-checks): false"
      params:
        - IMAGE_DIGEST: "$(tasks.build-container.results.IMAGE_DIGEST)"
        - IMAGE_URL: "$(tasks.build-container.results.IMAGE_URL)"
      ref: bundle://quay.io/konflux-ci/tekton-catalog/task-sbom-json-check:0.1
