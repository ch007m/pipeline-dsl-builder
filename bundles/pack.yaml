---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  annotations:
    tekton.dev/pipelines.minVersion: 0.50.0
    tekton.dev/categories: Image build
    tekton.dev/tags: image-build
    tekton.dev/displayName: "pack"
    tekton.dev/platforms: "linux/amd64"
  labels:
    app.kubernetes.io/version: '0.1'
  name: pack
spec:
  description: >-
    Buildpack pack client - https://buildpacks.io/docs/tools/pack/
  params:
    - name: PACK_EXPERIMENTAL
      default: "false"
      description: Enable experimental features
      type: string
    - name: PACK_CLI_IMAGE
      default: buildpacksio/pack
      description: The image to use for the pack client.
      type: string
    - name: PACK_CLI_IMAGE_VERSION
      default: latest
      description: Pack client version
      type: string
    - name: PACK_SOURCE_DIR
      default: .
      description: Directory containing the source files to build.
      type: string
    - name: PACK_CMD_FLAGS
      default: []
      description: The Arguments to be passed to the pack command.
      type: array

  results:
    # Needed to run on Konflux
    - description: Digest of the image just built
      name: IMAGE_DIGEST
    - description: Image repository where the built image was pushed
      name: IMAGE_URL
    - name: BASE_IMAGES_DIGESTS
      description: Digests of the base images used for build
    - name: JAVA_COMMUNITY_DEPENDENCIES
      description: The Java dependencies that came from community sources such as Maven central.
  workspaces:
    - name: source-dir
    - name: pack-workspace
      mountPath: /workspace
  steps:
    - name: list-workspace-files
      image: "quay.io/centos/centos:latest"
      script: |-
        #!/usr/bin/env bash

        set -e

        echo "List files under: $(workspaces.source-dir.path)"
        ls -la $(workspaces.source-dir.path)/
        ls -la $(workspaces.source-dir.path)/source
        
        #ls -la $(workspaces.pack-workspace.path)/.docker/
        #cat $(workspaces.pack-workspace.path)/.docker/config.json

    - name: pack
      image: $(params.PACK_CLI_IMAGE):$(params.PACK_CLI_IMAGE_VERSION)
      workingDir: $(workspaces.source-dir.path)/$(params.PACK_SOURCE_DIR)
      env:
        - name: DOCKER_CONFIG
          value: $(workspaces.pack-workspace.path)/.docker
        - name: PACK_HOME
          value: $(workspaces.pack-workspace.path)
      args:
        - "$(params.PACK_CMD_FLAGS[*])"

    - name: export-images-digest
      image: registry.access.redhat.com/ubi9/buildah:9.3-12@sha256:3b11aae36f6c762e01731952ee6fb8e89c41660ce410e4c30d0bfc6496bca93c
      computeResources: {}
      script: |
        # Expose base image digests
        buildah images --format '{{ .Name }}:{{ .Tag }}@{{ .Digest }}' | grep -v $IMAGE > $(results.BASE_IMAGES_DIGESTS.path)

      securityContext:
        runAsUser: 0
        capabilities:
          add:
            - SETFCAP
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers

      workingDir: $(workspaces.source.path)
  volumes:
    - name: varlibcontainers
      emptyDir: {}